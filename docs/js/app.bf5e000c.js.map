{"version":3,"file":"js/app.bf5e000c.js","mappings":"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","sources":["webpack://digicanvas/./src/App.vue","webpack://digicanvas/./src/components/Delay.vue","webpack://digicanvas/./src/components/Effect.vue","webpack://digicanvas/./src/utils.js","webpack://digicanvas/./src/components/Sample.vue","webpack://digicanvas/src/components/Sample.vue","webpack://digicanvas/./src/components/Sample.vue?0499","webpack://digicanvas/./src/components/Sample.vue?8059","webpack://digicanvas/src/components/Effect.vue","webpack://digicanvas/./src/components/Effect.vue?ac8e","webpack://digicanvas/./src/components/Effect.vue?8a93","webpack://digicanvas/src/components/Delay.vue","webpack://digicanvas/./src/components/Delay.vue?8bb6","webpack://digicanvas/./src/components/Delay.vue?00f3","webpack://digicanvas/./src/components/Reverb.vue","webpack://digicanvas/src/components/Reverb.vue","webpack://digicanvas/./src/components/Reverb.vue?067b","webpack://digicanvas/./src/components/Reverb.vue?81e6","webpack://digicanvas/src/App.vue","webpack://digicanvas/./src/App.vue?c036","webpack://digicanvas/./src/App.vue?0e40","webpack://digicanvas/./src/main.js","webpack://digicanvas/webpack/bootstrap","webpack://digicanvas/webpack/runtime/chunk loaded","webpack://digicanvas/webpack/runtime/compat get default export","webpack://digicanvas/webpack/runtime/define property getters","webpack://digicanvas/webpack/runtime/global","webpack://digicanvas/webpack/runtime/hasOwnProperty shorthand","webpack://digicanvas/webpack/runtime/jsonp chunk loading","webpack://digicanvas/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"no-select\",attrs:{\"id\":\"app\"},on:{\"dragover\":function($event){$event.preventDefault();},\"drop\":function($event){$event.preventDefault();return _vm.handleDrop.apply(null, arguments)}}},[_c('canvas',{ref:\"paperCanvas\",class:{ debug: _vm.$root.debug },staticStyle:{\"z-index\":\"0\"},attrs:{\"id\":\"paper-canvas\",\"width\":\"100%\",\"height\":\"100%\"}}),_c('img',{staticClass:\"app-button scale-hover\",staticStyle:{\"right\":\"20px\"},attrs:{\"id\":\"add-button\",\"src\":\"icons/add.svg\"},on:{\"click\":function($event){_vm.adding = !_vm.adding}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.adding),expression:\"adding\"}],staticStyle:{\"position\":\"absolute\",\"bottom\":\"70px\",\"right\":\"20px\"}},[_vm._l((Object.keys(_vm.presets)),function(presetKey){return _c('div',{key:presetKey,staticClass:\"add-sample-button scale-hover no-drag\",on:{\"click\":function($event){return _vm.addPreset(presetKey)}}},[_vm._v(\" \"+_vm._s(presetKey)+\" \")])}),_c('div',{staticClass:\"add-sample-button scale-hover\",on:{\"click\":_vm.addSample}},[_vm._v(\"📁\")])],2),_c('img',{staticClass:\"app-button scale-hover\",staticStyle:{\"right\":\"80px\"},attrs:{\"id\":\"add-button\",\"src\":\"icons/trash.svg\"},on:{\"click\":_vm.removeSample}}),_c('img',{staticClass:\"app-button\",staticStyle:{\"right\":\"140px\"},attrs:{\"id\":\"save-button\",\"src\":\"icons/save.svg\"},on:{\"click\":_vm.saveSession}}),_c('img',{staticClass:\"app-button\",class:{ recording: _vm.recording },staticStyle:{\"right\":\"200px\"},attrs:{\"id\":\"record-button\",\"src\":\"icons/record.svg\"},on:{\"click\":_vm.toggleSimpleRecord}}),_c('img',{staticClass:\"app-button\",class:{ recording: _vm.microphoning },staticStyle:{\"right\":\"260px\"},attrs:{\"id\":\"mic-button\",\"src\":\"icons/mic.svg\"},on:{\"click\":_vm.toggleMicrophone}}),_vm._l((_vm.samples),function(sample){return _c('Sample',{key:sample.idx,ref:\"samples\",refInFor:true,attrs:{\"name\":sample.name,\"audio\":sample.audio,\"position\":sample.position,\"idx\":sample.idx,\"audio-buffer\":sample.buffer},nativeOn:{\"mouseover\":function($event){_vm.$root.lastSampleInteractionIdx = sample.idx}}})}),_c('Reverb',{ref:\"reverb\",staticStyle:{\"bottom\":\"50px\",\"left\":\"30px\"}}),_c('Delay',{ref:\"delay\",staticStyle:{\"bottom\":\"50px\",\"left\":\"280px\"}}),_c('input',{ref:\"fileChooser\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"hiddenFileInput\",\"type\":\"file\",\"accept\":\".mp3\"},on:{\"change\":_vm.handleSampleFileUpload}}),_c('a',{attrs:{\"href\":\"https://github.com/Digitopia/DigiCanvas\",\"target\":\"_blank\"}},[_c('img',{staticClass:\"app-button scale-hover\",attrs:{\"id\":\"info-button\",\"src\":\"icons/info.svg\"},on:{\"click\":function($event){_vm.showInfo = true}}})])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Effect',{attrs:{\"params\":_vm.params,\"effect-node\":_vm.delayNode,\"icon\":\"icons/delay.svg\",\"name\":\"delay\"}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"effect\",staticClass:\"effect\"},[_c('div',{ref:\"effectArea\",staticClass:\"effect-area\"}),_c('div',{ref:\"effectCenter\",staticClass:\"effect-center\",style:({ backgroundImage: `url('${_vm.icon}')` }),on:{\"dblclick\":function($event){$event.stopPropagation();_vm.showSliders = !_vm.showSliders},\"touchstart\":function($event){$event.stopPropagation();return _vm.touchStart.apply(null, arguments)}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showSliders),expression:\"showSliders\"}],staticClass:\"sliders\"},_vm._l((_vm.params),function(param,paramName,idx){return _c('round-slider',{key:paramName,staticStyle:{\"position\":\"absolute\"},attrs:{\"id\":paramName,\"start-angle\":_vm.getStartAngle(param, idx),\"end-angle\":_vm.getEndAngle(param),\"line-cap\":\"round\",\"width\":\"8\",\"path-color\":\"rgba(255,255,255,0.4)\",\"range-color\":\"var(--blue)\",\"animation\":false,\"radius\":\"50\",\"show-tooltip\":false,\"keyboard-action\":false,\"min\":param.min,\"max\":param.max,\"step\":param.step,\"handle-size\":\"+8\",\"update\":_vm.handleParamChange},model:{value:(param.value),callback:function ($$v) {_vm.$set(param, \"value\", $$v)},expression:\"param.value\"}})}),1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const mapNumber = (number, inMin, inMax, outMin, outMax) =>\n  ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n\nexport function clamp(value, min, max) {\n  return Math.min(max, Math.max(min, value))\n}\n\nexport function randomFloat(min, max) {\n  return Math.random() * (max - min) + min\n}\n\nexport function randomInt(min, max) {\n  return Math.round(randomFloat(min, max))\n}\n\n// taken from https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-b  ell-curve\nexport function randomGaussian(mean = 0, stdev = 1) {\n  const u = 1 - Math.random() // Converting [0,1) to (0,1]\n  const v = Math.random()\n  const z = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v)\n  // Transform to the desired mean and standard deviation:\n  return z * stdev + mean\n}\n\n// taken from p5.js (with help from ChatGPT, so here be dragons)\nexport function lerpColor(c1, c2, amt) {\n  let r1, g1, b1, a1\n  let r2, g2, b2, a2\n  let r3, g3, b3, a3\n\n  r1 = c1[0]\n  g1 = c1[1]\n  b1 = c1[2]\n  a1 = c1[3]\n\n  r2 = c2[0]\n  g2 = c2[1]\n  b2 = c2[2]\n  a2 = c2[3]\n\n  r3 = r1 + (r2 - r1) * amt\n  g3 = g1 + (g2 - g1) * amt\n  b3 = b1 + (b2 - b1) * amt\n  a3 = a1 + (a2 - a1) * amt\n\n  return [r3, g3, b3, a3]\n}\n\nexport function mapExp(val, min, max) {\n  const norm = mapNumber(val, min, max, 0, 1)\n  const exp = norm ** 2\n  const ret = +mapNumber(exp, 0, 1, min, max).toFixed(2)\n  return ret\n}\n\n// Play with the curves here: https://www.desmos.com/calculator/nlvhctownn\nexport function mapLog(val, min, max) {\n  const norm = mapNumber(val, min, max, 0, 1)\n  const exp = Math.max(Math.log10(norm + 0.1) + 0.96, 0)\n  const ret = +mapNumber(exp, 0, 1, min, max).toFixed(2)\n  return ret\n}\n\n/* eslint-disable */\nexport function isMobile() {\n  let check = false\n  ;(function (a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n        a\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true\n  })(navigator.userAgent || navigator.vendor || window.opera)\n  return check\n}\n/* eslint-enable */\n\nexport function audioBufferToWav(buffer, opt) {\n  opt = opt || {}\n\n  var numChannels = buffer.numberOfChannels\n  var sampleRate = buffer.sampleRate\n  var format = opt.float32 ? 3 : 1\n  var bitDepth = format === 3 ? 32 : 16\n\n  var result\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1))\n  } else {\n    result = buffer.getChannelData(0)\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV(samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8\n  var blockAlign = numChannels * bytesPerSample\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample)\n  var view = new DataView(buffer)\n\n  /* RIFF identifier */\n  writeString(view, 0, \"RIFF\")\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true)\n  /* RIFF type */\n  writeString(view, 8, \"WAVE\")\n  /* format chunk identifier */\n  writeString(view, 12, \"fmt \")\n  /* format chunk length */\n  view.setUint32(16, 16, true)\n  /* sample format (raw) */\n  view.setUint16(20, format, true)\n  /* channel count */\n  view.setUint16(22, numChannels, true)\n  /* sample rate */\n  view.setUint32(24, sampleRate, true)\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true)\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true)\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true)\n  /* data chunk identifier */\n  writeString(view, 36, \"data\")\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true)\n  if (format === 1) {\n    // Raw PCM\n    floatTo16BitPCM(view, 44, samples)\n  } else {\n    writeFloat32(view, 44, samples)\n  }\n\n  return buffer\n}\n\nfunction interleave(inputL, inputR) {\n  var length = inputL.length + inputR.length\n  var result = new Float32Array(length)\n\n  var index = 0\n  var inputIndex = 0\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex]\n    result[index++] = inputR[inputIndex]\n    inputIndex++\n  }\n  return result\n}\n\nfunction writeFloat32(output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true)\n  }\n}\n\nfunction floatTo16BitPCM(output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]))\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true)\n  }\n}\n\nfunction writeString(view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i))\n  }\n}\n\nexport function getCenter(div) {\n  const rect = div.getBoundingClientRect()\n  const x = rect.left + rect.width / 2\n  const y = rect.top + rect.height / 2\n  return { x, y }\n}\n\nexport function round(num, decimals = 2) {\n  return +num.toFixed(decimals)\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"sample\",staticClass:\"container\",class:{ debug: _vm.$root.debug },staticStyle:{\"margin\":\"0\"}},[_c('div',{staticClass:\"sample\",class:{ playing: _vm.isPlaying }},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.controls === 'settings'),expression:\"controls === 'settings'\"}],staticClass:\"controls no-select\",on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleControls(_vm.controls)}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode == 'sample'),expression:\"mode == 'sample'\"}],staticClass:\"spaced-out\"},_vm._l((_vm.settings.sample.modes),function(m){return _c('img',{key:m,staticClass:\"sample-mode-icon\",class:{\n            active: _vm.settings.sample.mode === m,\n            disabled: m === 'back-and-forth',\n          },attrs:{\"src\":`icons/${m}.svg`},on:{\"click\":function($event){$event.stopPropagation();_vm.settings.sample.mode = m}}})}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'granular'),expression:\"mode === 'granular'\"}],staticClass:\"granular-sliders spaced-out\"},[_c('div',{attrs:{\"id\":`filtering-${_vm.idx}`},on:{\"click\":function($event){$event.stopPropagation();}}},[_vm._v(\"Fs\")]),_c('div',{attrs:{\"id\":`grainSize-${_vm.idx}`},on:{\"click\":function($event){$event.stopPropagation();}}},[_vm._v(\"Gs\")]),_c('div',{attrs:{\"id\":`rate-${_vm.idx}`},on:{\"click\":function($event){$event.stopPropagation();}}},[_vm._v(\"Rt\")]),_c('div',{attrs:{\"id\":`random-${_vm.idx}`},on:{\"click\":function($event){$event.stopPropagation();}}},[_vm._v(\"Rd\")])])]),_c('div',{ref:\"header\",staticClass:\"header scale-hover\",on:{\"dblclick\":_vm.toggleEditName}},[(!_vm.isEditingName)?[_vm._v(\" \"+_vm._s(_vm.name)+\" \")]:[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.editName),expression:\"editName\"}],staticStyle:{\"text-align\":\"center\"},attrs:{\"type\":\"text\",\"maxlength\":\"20\"},domProps:{\"value\":(_vm.editName)},on:{\"keypress\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.toggleEditName.apply(null, arguments)},\"input\":function($event){if($event.target.composing)return;_vm.editName=$event.target.value}}})]],2),_c('div',{ref:\"waveformWrapper\",attrs:{\"id\":\"waveform-wrapper\"}},[_c('div',{ref:\"waveform\",class:`waveform-${_vm.idx}`}),_c('canvas',{ref:\"canvas\",staticClass:\"canvas\"})]),_c('div',{attrs:{\"id\":\"buttons\"}},[_c('div',{class:{ active: _vm.controls === 'settings' },attrs:{\"id\":\"settings-btn\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleControls('settings')}}},[_c('img',{staticClass:\"control-icon\",attrs:{\"src\":\"icons/overlay.svg\",\"alt\":\"\"}})]),_c('div',{attrs:{\"id\":\"mode-btn\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleMode()}}},[_c('img',{staticClass:\"control-icon\",attrs:{\"src\":_vm.mode === 'sample' ? 'icons/play.svg' : 'icons/granular.svg',\"alt\":\"\"}})]),_c('div',{ref:\"scaleButton\",staticStyle:{\"background-image\":\"url('icons/stretch.svg')\"},attrs:{\"id\":\"scale-btn\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleControls('scale')}}},[_c('img',{ref:\"scaleImage\",staticClass:\"control-icon\",attrs:{\"id\":\"scale-img\",\"src\":\"icons/stretch.svg\",\"alt\":\"\"},on:{\"dblclick\":_vm.resetTimestretch}})])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- CONTAINER -->\n  <div\n    ref=\"sample\"\n    class=\"container\"\n    :class=\"{ debug: $root.debug }\"\n    style=\"margin: 0\"\n  >\n    <!-- SAMPLE -->\n    <div class=\"sample\" :class=\"{ playing: isPlaying }\">\n      <div\n        v-show=\"controls === 'settings'\"\n        class=\"controls no-select\"\n        @click.stop=\"toggleControls(controls)\"\n      >\n        <!-- SAMPLE mode controls -->\n        <div v-show=\"mode == 'sample'\" class=\"spaced-out\">\n          <img\n            v-for=\"m in settings.sample.modes\"\n            :key=\"m\"\n            :class=\"{\n              active: settings.sample.mode === m,\n              disabled: m === 'back-and-forth',\n            }\"\n            class=\"sample-mode-icon\"\n            :src=\"`icons/${m}.svg`\"\n            @click.stop=\"settings.sample.mode = m\"\n          />\n        </div>\n        <!-- GRANULAR mode controls -->\n        <div v-show=\"mode === 'granular'\" class=\"granular-sliders spaced-out\">\n          <div :id=\"`filtering-${idx}`\" @click.stop>Fs</div>\n          <div :id=\"`grainSize-${idx}`\" @click.stop>Gs</div>\n          <div :id=\"`rate-${idx}`\" @click.stop>Rt</div>\n          <div :id=\"`random-${idx}`\" @click.stop>Rd</div>\n        </div>\n      </div>\n      <!-- HEADER -->\n      <div ref=\"header\" class=\"header scale-hover\" @dblclick=\"toggleEditName\">\n        <template v-if=\"!isEditingName\">\n          {{ name }}\n        </template>\n        <template v-else>\n          <input\n            v-model=\"editName\"\n            type=\"text\"\n            maxlength=\"20\"\n            style=\"text-align: center\"\n            @keypress.enter=\"toggleEditName\"\n          />\n        </template>\n      </div>\n      <!-- WAVEFORM -->\n      <div id=\"waveform-wrapper\" ref=\"waveformWrapper\">\n        <div ref=\"waveform\" :class=\"`waveform-${idx}`\"></div>\n        <canvas ref=\"canvas\" class=\"canvas\"></canvas>\n      </div>\n      <!-- BUTTONS -->\n      <div id=\"buttons\">\n        <!-- SETTINGS button -->\n        <div\n          id=\"settings-btn\"\n          :class=\"{ active: controls === 'settings' }\"\n          @click.stop=\"toggleControls('settings')\"\n        >\n          <img src=\"icons/overlay.svg\" class=\"control-icon\" alt=\"\" />\n        </div>\n        <!-- MODE button -->\n        <div id=\"mode-btn\" @click.stop=\"toggleMode()\">\n          <img\n            :src=\"mode === 'sample' ? 'icons/play.svg' : 'icons/granular.svg'\"\n            class=\"control-icon\"\n            alt=\"\"\n          />\n        </div>\n        <!-- SCALE button -->\n        <div\n          id=\"scale-btn\"\n          ref=\"scaleButton\"\n          style=\"background-image: url('icons/stretch.svg')\"\n          @click.stop=\"toggleControls('scale')\"\n        >\n          <img\n            id=\"scale-img\"\n            ref=\"scaleImage\"\n            src=\"icons/stretch.svg\"\n            class=\"control-icon\"\n            alt=\"\"\n            @dblclick=\"resetTimestretch\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport WaveSurfer from \"wavesurfer.js\"\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.esm.js\"\n\nimport Draggable from \"gsap/Draggable\"\nimport Nexus from \"nexusui\"\nimport * as Tone from \"tone\"\nimport gsap from \"gsap\"\n\nexport const SAMPLE_PIXELS_PER_SECOND = 40\nexport const SAMPLE_MAX_WIDTH = 600\nexport const SAMPLE_MIN_WIDTH = 120\nexport const SAMPLE_MIN_WIDTH_UPLOAD = 200\nexport const SAMPLE_HEIGHT = 128\n\nimport {\n  mapNumber,\n  randomGaussian,\n  randomInt,\n  clamp,\n  lerpColor,\n  mapExp,\n  mapLog,\n  round,\n  getCenter,\n} from \"@/utils\"\n\nexport default {\n  props: {\n    audio: {\n      type: String,\n      required: true,\n    },\n    // eslint-disable-next-line vue/require-default-prop\n    audioBuffer: {\n      type: AudioBuffer,\n      required: false,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    idx: {\n      type: Number,\n      required: true,\n    },\n    // eslint-disable-next-line vue/require-default-prop\n    position: {\n      type: Object,\n      required: false,\n\n      // default: () => ({ x: null, y: null }),\n    },\n  },\n\n  data() {\n    return {\n      // audio nodes\n      audioNode: null, // to be used as source of the grains\n      audioGainNode: null, // gain node to control via amplitude slider\n      effectSends: {\n        // gain nodes for each effect send\n        reverb: null,\n        delay: null,\n      },\n      audioElementSource: null, // to be used to route the audio from waveform into the Tone.js\n      isEditingName: false,\n      editName: null,\n      wavesurfer: null,\n      controls: \"\", // other options: 'settings', 'granular' (ui)\n      mode: \"sample\", // or 'granular'\n      settings: {\n        sample: {\n          modes: [\"one-shot\", \"loop\"],\n          mode: \"loop\",\n        },\n        granular: {\n          origin: 0.5, // this is stored in [0, 1] range of the progress of the sample (start at middle)\n          params: {\n            grainSize: {\n              min: 0.1,\n              max: 1.5,\n              step: 0.01,\n              value: 0.2,\n            },\n            rate: {\n              // how often a new grain is produced [100ms, 1500s]\n              min: 0.1,\n              max: 1.5,\n              value: 1.5, // NOTE: since nexus-ui doesn't support inverted sliders (min > max), for better UX these values later get inverted\n            },\n            random: {\n              // how random (0 is at center, 1 is almost linearly, but still follows normal distribution)\n              min: 0,\n              max: 1,\n              value: 0.8,\n            },\n          },\n          sliders: {},\n          grains: [],\n          envelope: {\n            attack: 0.02,\n            release: 0.02,\n          },\n        },\n        scale: {\n          params: {\n            amplitude: {\n              min: 0.05,\n              max: 1.5,\n              value: 1,\n            },\n            timestretch: {\n              // min and max are given by minWidth and maxWidth\n              value: 1,\n            },\n          },\n        },\n        filtering: {\n          active: null,\n          slider: {\n            min: 0,\n            max: 1,\n            value: 0.2,\n            step: 0.01,\n          },\n          highpass: {\n            min: 0,\n            max: 5000,\n            value: 2000,\n            audioNode: null,\n          },\n          lowpass: {\n            min: 200,\n            max: 20000,\n            value: 1,\n            audioNode: null,\n          },\n        },\n      },\n      region: null, // regions are used in both granular and delimiters for the play and loop\n      isPlaying: false,\n      canvas: null,\n      canvasCtx: null,\n      width: null,\n      height: null,\n      pixelsPerSecond: SAMPLE_PIXELS_PER_SECOND,\n      maxWidth: SAMPLE_MAX_WIDTH,\n      minWidth: SAMPLE_MIN_WIDTH,\n      originalDuration: null, // so that can revert with double click\n      originalWidth: null, // so that can revert with double click\n      paperRect: null,\n    }\n  },\n\n  computed: {\n    maxDuration() {\n      return this.maxWidth / this.pixelsPerSecond\n    },\n\n    isLooping() {\n      return !(\n        this.mode === \"sample\" && this.settings.sample.mode === \"one-shot\"\n      )\n    },\n\n    bufferDuration() {\n      if (this.audioNode && this.audioNode.buffer) {\n        return this.audioNode.buffer.duration\n      }\n      return NaN\n    },\n\n    grainSize() {\n      return this.settings.granular.params.grainSize.value\n    },\n  },\n\n  watch: {\n    isPlaying() {\n      console.debug(\"isPlaying\", this.isPlaying)\n    },\n\n    controls() {\n      console.debug(\"controls are now\", this.controls)\n      const bool = this.controls === null || this.controls === \"scale\"\n      this.settings.region.setOptions({\n        resize: bool,\n        drag: bool,\n      })\n    },\n  },\n\n  created() {\n    window.sample = this\n    window.getCenter = getCenter\n  },\n\n  mounted() {\n    this.editName = this.name\n\n    this.initWaveform()\n    this.initAudio()\n    this.initGranularSliders()\n    this.initCanvas()\n\n    this.$refs.sample.style.minWidth = this.minWidth + \"px\"\n    this.$refs.sample.style.maxWidth = this.maxWidth + \"px\"\n\n    this.$root.$on(\"toggleControls\", this.toggleControls)\n    this.$root.$on(\"effectDragUseArea\", this.effectDragUseArea)\n\n    document.addEventListener(\"keydown\", (event) => {\n      if (\n        event.key === \"Backspace\" &&\n        this.$root.lastSampleInteractionIdx === this.idx &&\n        !this.isEditingName\n      ) {\n        this.$destroy()\n      }\n    })\n\n    window.grains = this.settings.granular.grains\n    window.mapLog = mapLog\n  },\n\n  beforeDestroy() {\n    console.info(\"beforeDestroy\", this.name, this.idx)\n    this.resizeObserver.unobserve(this.$refs.sample)\n    this.$root.$off(\"toggleControls\", this.toggleControls)\n    this.$root.$off(\"effectDragUseArea\", this.effectDragUseArea)\n    this.$el.parentNode.removeChild(this.$el)\n\n    // clean up audio nodes\n    const nodes = [\n      this.audioNode,\n      this.audioGainNode,\n      this.effectSends.reverb,\n      this.effectSends.delay,\n      this.settings.filtering.lowpass.audioNode,\n      this.settings.filtering.highpass.audioNode,\n      // this.audioElementSource,\n    ]\n    nodes.forEach((node) => {\n      if (node) {\n        node.dispose()\n        node = null\n      }\n    })\n  },\n\n  methods: {\n    getInvertedRate() {\n      return mapNumber(\n        this.settings.granular.params.rate.value,\n        this.settings.granular.params.rate.min,\n        this.settings.granular.params.rate.max,\n        this.settings.granular.params.rate.max,\n        this.settings.granular.params.rate.min\n      )\n    },\n\n    toggleEditName() {\n      this.isEditingName = !this.isEditingName\n      if (this.isEditingName) {\n        this.draggable.disable()\n      } else {\n        // eslint-disable-next-line vue/no-mutating-props\n        this.name = this.editName\n        this.draggable.enable()\n      }\n    },\n\n    timestamp2Progress(timestamp) {\n      return mapNumber(timestamp, 0, this.bufferDuration, 0, 1)\n    },\n\n    async initWaveform() {\n      const wavesurfer = WaveSurfer.create({\n        container: this.$refs.waveform,\n        backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n        waveColor: \"lightgray\",\n        progressColor: \"lightgray\",\n        cursorColor: \"black\",\n        cursorWidth: 1,\n        barWidth: 2,\n        barHeight: 1, // goes from [0.1 to 4]\n        barGap: 3,\n        normalize: false, // if true, then barHeight for amplitude doesn't work\n        interact: false,\n        hideScrollbar: true,\n        plugins: [RegionsPlugin.create({})],\n      })\n\n      // Initialize the Regions plugin\n      this.regionsPlugin = wavesurfer.registerPlugin(RegionsPlugin.create())\n\n      wavesurfer.on(\"ready\", async () => {\n        console.debug(\"waveform ready for\", this.audio)\n        this.audioElementSource = Tone.getContext().createMediaElementSource(\n          wavesurfer.media\n        )\n        Tone.connect(this.audioElementSource, this.audioGainNode)\n\n        await this.resize()\n        this.initDraggable()\n        this.initPosition()\n      })\n\n      wavesurfer.on(\"finish\", () => {\n        // since region-out doesn't get fired when region is full sample\n        if (this.isLooping) this.settings.region.play()\n      })\n\n      this.wavesurfer = wavesurfer\n      this.$refs.waveform.addEventListener(\"click\", this.onClick)\n\n      if (!this.audioBuffer) wavesurfer.load(this.audio)\n      else {\n        // this draws the waveform but throws the error GET /blob\n        const p = wavesurfer.loadBlob(\n          this.audio,\n          [this.audioBuffer.getChannelData(0)],\n          this.audioBuffer.duration\n        )\n        console.debug(p)\n\n        // this DOES NOT get the error /GET a blob, but does not draw the waveform at all\n        // window.p2 = wavesurfer.loadAudio(\n        //   this.audio,\n        //   this.audioBuffer.getChannelData(0),\n        //   this.audioBuffer.duration\n        // )\n      }\n    },\n\n    initPosition() {\n      let x, y\n      if (this.position) {\n        // use position if prop is provided\n        console.log(\"using provided position\", this.position)\n        x = this.position.x\n        y = this.position.y\n      } else {\n        // otherwise first sample is centered\n        if (this.idx === 0) {\n          x = window.innerWidth / 2 - this.width / 2\n          y = window.innerHeight / 2 - this.height / 2 - 75\n        } else {\n          // and others are random\n          x = randomInt(0, window.innerWidth - this.width * 1.2)\n          y = randomInt(0, window.innerHeight - this.height * 1.2)\n        }\n      }\n\n      // now that is init, we can show it and avoid flickering of positioning\n      gsap.to(this.$refs.sample, {\n        x,\n        y,\n        ease: \"power2.out\",\n        duration: 0.4,\n        opacity: 1,\n        onComplete: () => {\n          // set paper rect to be used for intersection with effects area\n          const { x, y } = getCenter(this.$refs.waveform)\n          this.paperRect = new this.$root.paper.Path.Rectangle({\n            position: { x, y },\n            size: [this.width, this.height],\n            fillColor: \"lightblue\",\n            strokeColor: \"blue\",\n          })\n        },\n      })\n    },\n\n    // Called from within initWaveform, since needs width of the waveform container\n    initDraggable() {\n      this.draggable = Draggable.create(this.$refs.sample, {\n        trigger: this.$refs.header,\n        type: \"x,y\",\n        bounds: \"html\",\n        zIndexBoost: true,\n        onDrag: () => {\n          this.$root.$emit(\n            \"effectDragUseArea\",\n            this.$parent.$refs.reverb.$children[0]\n          )\n          this.$root.$emit(\n            \"effectDragUseArea\",\n            this.$parent.$refs.delay.$children[0]\n          )\n          // update paper rect\n          const { x, y } = getCenter(this.$refs.waveform)\n          this.paperRect.set({ position: { x, y } })\n        },\n      })[0]\n\n      gsap.set(this.$refs.sample, {\n        x: window.innerWidth / 2 - this.width / 2,\n        y: window.innerHeight / 2 - this.height / 2,\n      })\n    },\n\n    initAudio() {\n      console.debug(\"init audio\")\n\n      this.audioNode = new Tone.Player(this.audio, () => {\n        console.debug(\"loaded audio\", this.audio)\n        this.originalDuration = this.bufferDuration\n        this.$refs.sample.style.width = `${\n          this.bufferDuration * this.pixelsPerSecond\n        }px`\n        this.originalWidth = parseInt(this.$refs.sample.style.width)\n\n        this.resetTimestretch()\n        this.initResizeObserver()\n        this.initScaleDraggable()\n        setTimeout(() => {\n          this.initRegion()\n          this.stop() // to avoid UI jump at play\n        }, 200) // TODO: requiring timeout\n      })\n      // Add error handling\n      this.audioNode.onerror = (err) => {\n        console.error(\"Error loading audio\", err)\n      }\n      this.audioNode.volume.value = -6\n\n      // gain node to control via amplitude slider\n      this.audioGainNode = new Tone.Gain(\n        this.settings.scale.params.amplitude.value\n      )\n\n      // create effect send (gain) nodes and connect them to the global effect nodes\n      const effects = [\"reverb\", \"delay\"]\n      effects.forEach((effect) => {\n        this.effectSends[effect] = new Tone.Gain(0)\n        this.effectSends[effect].connect(this.$root.effectNodes[effect])\n        this.audioGainNode.connect(this.effectSends[effect])\n      })\n\n      // init frequency filters\n      const filterTypes = [\"highpass\", \"lowpass\"]\n      filterTypes.forEach((filterType) => {\n        const filterSettings = this.settings.filtering[filterType]\n        const filterNode = new Tone.Filter(filterSettings.value, filterType)\n        filterNode.connect(this.$root.preMaster)\n        filterSettings.audioNode = filterNode\n      })\n    },\n\n    initGranularSliders() {\n      const opts = {\n        size: [20, 80],\n        mode: \"relative\",\n      }\n\n      // grain size\n      const grainSizeSlider = new Nexus.Slider(`#grainSize-${this.idx}`, {\n        ...opts,\n        ...this.settings.granular.params.grainSize,\n      })\n      this.settings.granular.sliders.grainSize = grainSizeSlider\n\n      const that = this\n      grainSizeSlider.on(\"change\", function (val) {\n        const expGrainSize = mapExp(\n          val,\n          that.settings.granular.params.grainSize.min,\n          that.settings.granular.params.grainSize.max\n        )\n        console.debug(\n          \"[grain-size]\",\n          `val=${round(val).toString().padStart(2)}`,\n          `exp=${round(expGrainSize).toString().padStart(2)}`\n        )\n        that.settings.granular.params.grainSize.value = expGrainSize\n      })\n\n      // rate\n      const rateSlider = new Nexus.Slider(`#rate-${this.idx}`, {\n        ...opts,\n        ...this.settings.granular.params.rate,\n      })\n      this.settings.granular.sliders.rate = rateSlider\n      rateSlider.on(\"change\", (val) => {\n        const logRate = mapLog(\n          val,\n          this.settings.granular.params.rate.min,\n          this.settings.granular.params.rate.max\n        )\n        this.settings.granular.params.rate.value = logRate\n        console.debug(\n          \"[rate]\",\n          `val=${round(val)}`,\n          `log=${round(logRate)}`,\n          `inv=${round(this.getInvertedRate())}`\n        )\n      })\n\n      // random\n      const randomSlider = new Nexus.Slider(`#random-${this.idx}`, {\n        ...opts,\n        ...this.settings.granular.params.random,\n      })\n      this.settings.granular.sliders.rate = randomSlider\n      randomSlider.on(\"change\", (val) => {\n        console.debug(\"[random]\", `val=${round(val)}`)\n        this.settings.granular.params.random.value = val\n      })\n\n      // filtering\n      const filteringSlider = new Nexus.Slider(`#filtering-${this.idx}`, {\n        ...opts,\n        ...this.settings.filtering.slider,\n      })\n      filteringSlider.on(\"change\", (val) => {\n        let filterFrequency\n        let filterType\n        if (val >= 0.5) {\n          filterType = \"highpass\"\n          filterFrequency = mapNumber(\n            val,\n            0.5,\n            1,\n            this.settings.filtering.highpass.min,\n            this.settings.filtering.highpass.max\n          )\n          this.settings.filtering.highpass.value = filterFrequency\n          this.settings.filtering.highpass.audioNode.frequency.rampTo(\n            filterFrequency,\n            0.1\n          )\n        } else {\n          filterType = \"lowpass\"\n          filterFrequency = mapNumber(\n            val,\n            0,\n            0.5,\n            this.settings.filtering.lowpass.min,\n            this.settings.filtering.lowpass.max\n          )\n          this.settings.filtering.lowpass.value = filterFrequency\n          this.settings.filtering.lowpass.audioNode.frequency.rampTo(\n            filterFrequency,\n            0.1\n          )\n        }\n\n        console.debug(\n          \"[filtering]\",\n          `val=${round(val)}`,\n          `type=${filterType}`,\n          `freq=${round(filterFrequency)}`\n        )\n\n        // toggle which filter to use after the gainNode\n        if (this.settings.filtering.active !== filterType) {\n          this.audioGainNode.disconnect() // disconnect all outgoing connections\n          this.audioGainNode.connect(\n            this.settings.filtering[filterType].audioNode\n          )\n          this.settings.filtering.active = filterType\n        }\n\n        this.settings.filtering.value = val\n      })\n      // trigger on change of the slider on init\n      // eslint-disable-next-line no-self-assign\n      filteringSlider.value = filteringSlider.value\n\n      // colors\n      const sliders = [\n        grainSizeSlider,\n        rateSlider,\n        randomSlider,\n        filteringSlider,\n      ]\n      sliders.forEach((slider) => {\n        slider.colorize(\"accent\", \"var(--blue)\")\n        slider.colorize(\"fill\", \"var(--blue-light)\")\n      })\n    },\n\n    updateAmplitude(val) {\n      // amplitude maps at a 1:1 to barHeight\n      console.debug(\"amplitude is now\", val)\n      this.wavesurfer.setOptions({\n        barHeight: val,\n      })\n      console.debug(\"using amplitude of \", val, \"to apply in gain node\")\n      this.audioGainNode.gain.exponentialRampToValueAtTime(val, 0.02)\n      this.settings.scale.params.amplitude.value = val\n    },\n\n    updateTimestretch(width) {\n      console.debug(\"timestretch is now\", width)\n      this.$refs.sample.style.width = `${width}px`\n      const playbackRate = 1 / (width / this.originalWidth)\n\n      // interpolate color\n      const startColor = [255, 255, 255, 0.95]\n      const stopColor = [255, 255, 255, 0.95]\n      const color = lerpColor(\n        startColor,\n        stopColor,\n        mapNumber(width, this.minWidth, this.maxWidth, 0, 1)\n      )\n      this.$refs.sample.style.backgroundColor = `rgba(${color[0]},${color[1]},${color[2]},${color[3]})`\n\n      this.settings.scale.params.timestretch.value = playbackRate\n      console.debug(\"playbackRate\", playbackRate)\n\n      this.resize()\n\n      this.wavesurfer.setPlaybackRate(playbackRate, false)\n    },\n\n    initCanvas() {\n      this.canvas = this.$refs.canvas\n      this.canvasCtx = this.canvas.getContext(\"2d\")\n      this.resize()\n    },\n\n    initScaleDraggable() {\n      const that = this\n      Draggable.create(this.$refs.scaleImage, {\n        trigger: this.$refs.scaleImage,\n        type: \"y\",\n        lockAxis: true,\n        bounds: {\n          minY: 0,\n          maxY: -128,\n        },\n        onDragEnd: function () {\n          gsap.to(this.target, {\n            y: 0,\n            ease: \"power2.out\",\n            duration: 0.2,\n          })\n          return\n        },\n        onDragStart: () => {\n          gsap.set(this.$refs.scaleImage, { cursor: \"grabbing\" })\n        },\n        onDrag: function () {\n          console.debug(\"end\", this.endX, this.endY)\n          if (this.lockedAxis === \"x\") {\n            const mappedAmplitude = mapNumber(\n              this.endY,\n              0,\n              -128,\n              that.settings.scale.params.amplitude.min,\n              that.settings.scale.params.amplitude.max\n            )\n            that.updateAmplitude(mappedAmplitude)\n          }\n        },\n      })\n    },\n\n    initResizeObserver() {\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          const newWidth = entry.contentRect.width\n          console.debug(\"newWidth\", newWidth)\n          this.updateTimestretch(newWidth)\n        })\n      })\n\n      resizeObserver.observe(this.$refs.sample)\n      this.resizeObserver = resizeObserver // so that later can unobserve before destroy\n    },\n\n    resetTimestretch() {\n      this.updateTimestretch(this.originalDuration * this.pixelsPerSecond)\n      this.updateAmplitude(1)\n    },\n\n    initRegion() {\n      console.debug(\"initting region...\")\n      const start = 0\n      const end = this.audioNode.buffer.duration\n      this.settings.region = this.regionsPlugin.addRegion({\n        start,\n        end,\n        content: \"\",\n        color: \"rgba(170, 197, 216, 0.1)\",\n        resize: true,\n        drag: true,\n        loop: false, // NOTE: his prop doesn't work, so need to work around with region and wavesurfer events\n      })\n      console.debug(\"added region\", this.settings.region)\n\n      this.settings.region.on(\"update\", () => {\n        if (this.mode === \"granular\") {\n          this.updateGranularOrigin()\n        }\n      })\n\n      this.regionsPlugin.on(\"region-update-end\", () => {\n        if (this.mode === \"sample\" && !this.isPlaying) {\n          // to avoid UI jump\n          this.stop()\n        }\n      })\n\n      // workaround for looping region, since loop proper of region not working...\n      this.regionsPlugin.on(\"region-out\", (region) => {\n        console.debug(\"region out\")\n        if (this.isLooping) {\n          console.debug(\"playing region again\")\n          region.play()\n        } else {\n          this.stop()\n        }\n      })\n    },\n\n    updateGranularOrigin() {\n      const { start, end } = this.settings.region\n      const mx = (end - start) / 2 + start\n      this.settings.granular.origin = this.timestamp2Progress(mx)\n    },\n\n    async resize() {\n      console.debug(\"resizing...\")\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          this.width = this.$refs.waveformWrapper.clientWidth\n          console.debug(\"init in resize width is\", this.width)\n          this.height = this.$refs.waveformWrapper.clientHeight\n          console.debug({ height: this.height })\n          console.debug(this.width, this.height)\n          this.canvas.setAttribute(\"width\", this.width)\n          this.canvas.setAttribute(\"height\", this.height)\n          this.wavesurfer.setOptions({ height: this.height })\n          resolve()\n        }, 100)\n      })\n    },\n\n    play() {\n      if (this.mode === \"sample\") {\n        this.wavesurfer.setOptions({ cursorColor: \"black\" })\n        this.settings.region.play()\n        this.audioGainNode.gain.exponentialRampToValueAtTime(1, 0.02)\n      } else {\n        this.resize()\n        this.addGrain()\n        this.updateRateInterval()\n      }\n      this.isPlaying = true\n    },\n\n    stop() {\n      if (this.mode === \"sample\") {\n        this.wavesurfer.setOptions({ cursorColor: \"transparent\" })\n        // this.audioGainNode.gain.exponentialRampToValueAtTime(0, 0.02)\n        this.wavesurfer.stop()\n        this.wavesurfer.seekTo(\n          this.timestamp2Progress(this.settings.region.start)\n        )\n      } else {\n        // cleanup of granular\n        this.clearGranularInterval()\n        this.clearCanvas()\n      }\n      this.isPlaying = false\n    },\n\n    toggleControls(controls) {\n      console.debug(\"toggling controls:\", controls)\n      this.controls = this.controls === controls ? null : controls\n    },\n\n    toggleMode() {\n      const wasPlaying = this.isPlaying\n      this.updateGranularOrigin()\n      this.stop() // need to play/stop between modes\n      this.clearGrains()\n\n      this.mode = this.mode === \"sample\" ? \"granular\" : \"sample\"\n      console.debug(\"mode is now\", this.mode)\n\n      if (this.mode == \"sample\") {\n        this.wavesurfer.setOptions({ interact: true })\n      } else if (this.mode == \"granular\") {\n        this.wavesurfer.setOptions({ interact: false })\n      }\n      if (wasPlaying) {\n        this.play()\n      }\n    },\n\n    clearGranularInterval() {\n      console.debug(\n        \"clearing granular interval\",\n        this.settings.granular.params.rate.interval\n      )\n      clearInterval(this.settings.granular.params.rate.interval)\n    },\n\n    updateRateInterval() {\n      this.clearGranularInterval()\n      const delay = Math.round(this.getInvertedRate() * 1000)\n      console.debug(\"INVERTED RATE\", delay)\n      this.settings.granular.params.rate.interval = setInterval(\n        (delay) => {\n          this.addGrain()\n          // update interval at setInterval end with new interval, only if changed from previous\n          const currentDelay = Math.round(this.getInvertedRate() * 1000)\n          if (delay !== currentDelay) {\n            // console.debug(\"updating\")\n            this.updateRateInterval()\n          } else {\n            // console.debug(\"not updating\")\n          }\n        },\n        delay,\n        delay\n      )\n    },\n\n    addGrain() {\n      // console.debug(\"adding grain...\")\n      // access buffer\n      this.buffer = this.audioNode.buffer.getChannelData(0)\n\n      // determine where to read the grain from\n      const baseOffset = mapNumber(\n        this.settings.granular.origin,\n        0,\n        1,\n        0,\n        this.bufferDuration\n      )\n\n      // use 1/4 of the spray (the region of the granular) as std dev\n      const space = (this.settings.region.end - this.settings.region.start) / 4\n      const mappedStdDev = mapNumber(\n        this.settings.granular.params.random.value,\n        0,\n        1,\n        0,\n        space\n      )\n      const randOffset = randomGaussian(0, mappedStdDev)\n\n      const grainOffset = clamp(\n        baseOffset + randOffset,\n        this.settings.region.start,\n        this.settings.region.end\n      )\n      // console.debug({ baseOffset, mappedStdDev, randOffset, grainOffset })\n\n      // create a grain buffer\n      const grain = new Tone.Player(this.audioNode.buffer)\n      grain.fadeIn = this.settings.granular.envelope.attack\n      grain.fadeOut = this.settings.granular.envelope.release\n      grain.playbackRate = this.settings.scale.params.timestretch.value\n      setTimeout(() => {\n        this.settings.granular.grains.shift() // remove the last grain created\n        this.drawGrains()\n      }, this.grainSize * 1000)\n\n      grain.volume.value = -6\n      grain.connect(this.audioGainNode)\n\n      // play grain\n      // grain.start(now, grainOffset, this.grainSize) // this clicks!\n      grain.start(\"+0\", grainOffset, this.grainSize) // this doesn't!\n\n      // draw grains\n      const x = mapNumber(grainOffset, 0, this.bufferDuration, 0, this.width)\n      this.settings.granular.grains.push({ x })\n      this.drawGrains()\n\n      // TODO: cleanup grain after playing\n    },\n\n    clearCanvas() {\n      this.canvasCtx.clearRect(0, 0, this.width, this.height)\n    },\n\n    clearGrains() {\n      this.settings.granular.grains = []\n      this.drawGrains()\n    },\n\n    drawGrains() {\n      this.clearCanvas()\n\n      this.canvasCtx.fillStyle = \"rgba(10, 10, 10, 0.4)\"\n      this.canvasCtx.beginPath()\n\n      // drawing source point\n      // const r = 5\n      // this.canvasCtx.beginPath()\n      // this.canvasCtx.stroke()\n      // this.canvasCtx.fillStyle = \"red\"\n      // this.canvasCtx.arc(this.x, this.height / 2, r, 0, 2 * Math.PI)\n      // this.canvasCtx.closePath()\n\n      for (let i = 0; i < this.settings.granular.grains.length; i++) {\n        const { x } = this.settings.granular.grains[i]\n        this.canvasCtx.fillStyle = \"var(--blue)\"\n\n        // circle\n        this.canvasCtx.beginPath()\n        const r = ((this.width / this.bufferDuration) * this.grainSize) / 2\n        console.debug(\"HEIGHT\", this.height)\n        this.canvasCtx.arc(x, this.height / 2, r, 0, 2 * Math.PI)\n        // this.canvasCtx.stroke()\n        this.canvasCtx.fill()\n        this.canvasCtx.closePath()\n      }\n    },\n\n    onClick() {\n      Tone.context.resume() // so that it works in Chrome/Edge\n      if (this.controls) return\n      console.debug(\"click\")\n      if (this.mode === \"sample\") {\n        if (this.wavesurfer.isPlaying()) {\n          console.debug(\"stopping...\")\n          this.stop()\n        } else {\n          this.play()\n        }\n      } else if (this.mode === \"granular\") {\n        if (this.settings.granular.grains.length === 0) {\n          this.play()\n        } else {\n          this.stop()\n        }\n      }\n    },\n\n    // @deprecated, use effectDragUseArea instead\n    effectDragUseDistance(evt) {\n      // Calculate the distance between this sample center and the effect center\n      const effectName = evt.name\n      const effectAreaEl = evt.$el.querySelector(\".effect-area\")\n      const { x: x1, y: y1 } = getCenter(effectAreaEl)\n      const { x: x2, y: y2 } = getCenter(this.$refs.waveform)\n      const dx = x1 - x2\n      const dy = y1 - y2\n      const distance = Math.round(Math.sqrt(dx * dx + dy * dy))\n\n      const effectAreaRect = effectAreaEl.getBoundingClientRect()\n      const effectRadius = effectAreaRect.width\n      if (distance > effectRadius) return\n\n      const effectSendVal = mapNumber(distance, 0, effectRadius, 1, 0).toFixed(\n        2\n      )\n      console.debug(\n        `d(${this.name}, ${effectName}) = ${distance}px effectSend(${effectSendVal})`\n      )\n\n      this.effectSends[effectName].gain.exponentialRampToValueAtTime(\n        effectSendVal,\n        0.02\n      )\n    },\n\n    effectDragUseArea(evt) {\n      const effectName = evt.name\n      const sampleRect = this.paperRect\n      const effectCricle = evt.$data.paperCircle\n\n      // circle needs to be converted into a path so that can calculate intersection\n      const effectCirclePath = effectCricle.toPath()\n      const intersection = sampleRect.intersect(effectCirclePath)\n      effectCirclePath.remove()\n      if (!intersection) return\n      const intersectionRate = intersection.area / sampleRect.area\n      intersection.remove()\n      console.debug(\n        `U(${effectName},${this.name})=`,\n        `${(intersectionRate * 100).toFixed(2)}%`\n      )\n\n      const effectSendVal = intersectionRate\n      if (effectSendVal) {\n        this.setEffectSend(effectName, effectSendVal)\n      }\n    },\n\n    setEffectSend(effectName, effectSendVal) {\n      // this.effectSends[effectName].gain.exponentialRampToValueAtTime(\n      //   effectSendVal,\n      //   0.02\n      // )\n      this.effectSends[effectName].gain.value = effectSendVal\n    },\n\n    getSaveData() {\n      return {\n        ...getCenter(this.$el),\n        name: this.name,\n        mode: this.mode,\n        settings: {\n          sample: {\n            mode: this.settings.sample.mode,\n          },\n          granular: {\n            origin: this.settings.granular.origin,\n            params: {\n              grainSize: {\n                value: this.settings.granular.params.grainSize.value,\n              },\n              rate: {\n                value: this.settings.granular.params.rate.value,\n              },\n              random: {\n                value: this.settings.granular.params.random.value,\n              },\n            },\n          },\n          scale: {\n            params: {\n              amplitude: {\n                value: this.settings.scale.params.amplitude.value,\n              },\n              timestretch: {\n                value: this.settings.scale.params.timestretch.value,\n              },\n            },\n          },\n        },\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#waveform {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.header {\n  color: white;\n  font-weight: bold;\n  font-size: 0.9rem;\n  position: relative;\n  background: var(--blue);\n  width: 100%;\n  border-top-left-radius: var(--border-radius);\n  border-top-right-radius: var(--border-radius);\n  border: 1px solid var(--blue);\n  &:hover {\n    cursor: grab !important;\n  }\n}\n\n#buttons {\n  display: flex;\n  justify-content: space-between;\n  height: 34px;\n}\n\n.controls {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 10;\n  display: flex;\n  font-size: 50px;\n  span {\n    opacity: 0.65;\n  }\n  border-radius: var(--border-radius);\n  // pointer-events: none;\n}\n\n.container {\n  position: absolute;\n  width: 200px;\n  // margin: 0 auto;\n  border-radius: var(--border-radius);\n  background: rgb(255, 255, 255);\n  &.playing {\n    background: var(--blue-light) !important;\n  }\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  resize: horizontal;\n  overflow: hidden;\n  opacity: 0;\n\n  &.debug {\n    opacity: 0.2 !important;\n  }\n}\n\n.spaced-out {\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n}\n\n.granular-sliders {\n  display: flex;\n  width: 100%;\n  font-size: 0.9rem;\n  & > div {\n    pointer-events: auto;\n  }\n  margin-top: -30px; // so that don't get so much on top of bottom row buttons\n}\n\n.grain {\n  width: 20px;\n}\n\n#waveform-wrapper {\n  position: relative;\n  #waveform,\n  .canvas {\n    border-radius: calc(var(--border-radius) / 2);\n  }\n\n  .canvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 100% !important;\n    z-index: 0;\n    height: 128px;\n  }\n\n  #waveform {\n    width: 100%;\n  }\n}\n\n.sample-mode-icon {\n  width: 50px;\n  height: 50px;\n  opacity: 0.4;\n  &:hover {\n    cursor: pointer;\n  }\n  &.active {\n    opacity: 1;\n  }\n  pointer-events: auto !important;\n}\n\n#scale-btn {\n  background-color: var(--blue-light);\n  &:-moz-drag-over {\n    cursor: move !important;\n  }\n  &:hover {\n    // cursor: move !important;\n  }\n}\n\n.control-icon,\n.sample-mode-icon,\n#scale-btn {\n  transition: all 0.05s;\n  &:hover {\n    transform: scale(1.05);\n    cursor: pointer !important;\n  }\n}\n\n.control-icon {\n  padding: 2px;\n  background-color: var(--blue-light);\n  width: 30px;\n  height: 30px;\n  pointer-events: auto !important;\n}\n\n#settings-btn > img {\n  border-top-right-radius: var(--border-radius);\n  border-bottom-left-radius: var(--border-radius);\n}\n\n#mode-btn > img {\n  border-top-left-radius: var(--border-radius);\n  border-top-right-radius: var(--border-radius);\n}\n\n#scale-img,\n#scale-btn {\n  border-top-left-radius: var(--border-radius);\n  border-bottom-right-radius: var(--border-radius);\n  &:hover {\n    cursor: n-resize !important;\n  }\n}\n\n#scale-img {\n  opacity: 0.15;\n}\n\n.disabled {\n  opacity: 0.2 !important;\n  pointer-events: none;\n  &:hover {\n    cursor: not-allowed !important;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Sample.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Sample.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Sample.vue?vue&type=template&id=0bac1601&scoped=true\"\nimport script from \"./Sample.vue?vue&type=script&lang=js\"\nexport * from \"./Sample.vue?vue&type=script&lang=js\"\nimport style0 from \"./Sample.vue?vue&type=style&index=0&id=0bac1601&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0bac1601\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div ref=\"effect\" class=\"effect\">\n    <div ref=\"effectArea\" class=\"effect-area\"></div>\n    <div\n      ref=\"effectCenter\"\n      class=\"effect-center\"\n      :style=\"{ backgroundImage: `url('${icon}')` }\"\n      @dblclick.stop=\"showSliders = !showSliders\"\n      @touchstart.stop=\"touchStart\"\n    ></div>\n    <div v-show=\"showSliders\" class=\"sliders\">\n      <round-slider\n        v-for=\"(param, paramName, idx) in params\"\n        :id=\"paramName\"\n        :key=\"paramName\"\n        v-model=\"param.value\"\n        :start-angle=\"getStartAngle(param, idx)\"\n        :end-angle=\"getEndAngle(param)\"\n        line-cap=\"round\"\n        width=\"8\"\n        path-color=\"rgba(255,255,255,0.4)\"\n        range-color=\"var(--blue)\"\n        :animation=\"false\"\n        radius=\"50\"\n        :show-tooltip=\"false\"\n        :keyboard-action=\"false\"\n        :min=\"param.min\"\n        :max=\"param.max\"\n        :step=\"param.step\"\n        handle-size=\"+8\"\n        style=\"position: absolute\"\n        :update=\"handleParamChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport RoundSlider from \"vue-round-slider\"\nimport Draggable from \"gsap/Draggable\"\n\nimport gsap from \"gsap\"\nimport { getCenter, mapNumber } from \"@/utils\"\nimport { SAMPLE_MAX_WIDTH, SAMPLE_HEIGHT } from \"@/components/Sample\"\n\ngsap.registerPlugin(Draggable)\n\nexport default {\n  components: {\n    RoundSlider,\n  },\n\n  props: {\n    params: {\n      type: Object,\n      required: true,\n    },\n\n    name: {\n      type: String,\n      required: true,\n    },\n\n    icon: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      effectNode: null,\n      showSliders: false,\n      sliderArcAngle: 90,\n      rangeRadius: null, // need a specific var so that <round-slider> auto changes\n      paperCircle: null,\n      touched: false, // var to detect double tap\n    }\n  },\n\n  computed: {\n    sliderArcAngleStep() {\n      const n = Object.keys(this.params).length\n      const remaining = 360 - n * this.sliderArcAngle\n      return remaining / n\n    },\n\n    sliderArcAngleAngleOffset() {\n      return this.sliderArcAngle + this.sliderArcAngleStep / 2 - 90\n    },\n  },\n\n  created() {\n    // calculate the diagonal (hypothenuse) of the biggest possible sample\n    const maxRangeWith =\n      Math.sqrt(SAMPLE_MAX_WIDTH ** 2 + SAMPLE_HEIGHT ** 2) * 1.05\n    console.debug(\"maxRangeWith\", maxRangeWith)\n    // eslint-disable-next-line vue/no-mutating-props\n    this.params.range = {\n      // NOTE: this is actual width, not radius! (because svg files require to be in 200px width)\n      min: 200,\n      max: maxRangeWith,\n      step: 1,\n      value: 200,\n      handler: (val) => {\n        console.debug(\"handler in EFFECT of range is now\", val)\n        const { min, max } = this.params.range\n        const scale = mapNumber(val, min, max, 1, max / min)\n        console.debug(`range is now ${val}px scale(${scale})`)\n\n        // using scale transform so that can scale the div from the center\n        this.$refs.effectArea.style.transform = `scale(${scale}) `\n        const newRadius = (this.$refs.effectArea.clientWidth / 2) * scale\n        console.debug(\"newRadius\", newRadius)\n        this.paperCircle.set({ radius: newRadius })\n\n        this.updatePaperCircle()\n      },\n    }\n\n    this.rangeRadius = this.params.range.value\n  },\n\n  mounted() {\n    this.initDraggable()\n\n    setTimeout(() => {\n      const { x, y } = getCenter(this.$refs.effectArea)\n      const radius = this.$refs.effectArea.clientWidth / 2\n      this.paperCircle = new this.$root.paper.Shape.Circle({\n        center: [x, y],\n        radius,\n        fillColor: \"red\",\n        strokeColor: \"black\",\n        strokeWidth: 2,\n      })\n    }, 1000)\n  },\n\n  methods: {\n    touchStart() {\n      if (this.touched) {\n        this.showSliders = !this.showSliders\n      }\n      setTimeout(() => {\n        this.touched = false\n      }, 300)\n      this.touched = true\n    },\n\n    initDraggable() {\n      Draggable.create(this.$refs.effect, {\n        trigger: this.$refs.effectCenter,\n        type: \"x,y\",\n        bounds: \"html\",\n        zIndexBoost: false,\n        onDragStart: () => {\n          // simulate zIndexBoost, but only within effects\n          const areas = document.querySelectorAll(\".effect-area\")\n          const highest = Math.max(\n            ...Array.from(areas).map((area) => parseInt(area.style.zIndex))\n          )\n          this.$refs.effectArea.style.zIndex = highest + 1\n        },\n        onDrag: () => {\n          this.$root.$emit(\"effectDragUseArea\", this)\n          this.updatePaperCircle()\n        },\n      })\n    },\n\n    getStartAngle(param, idx) {\n      return param.startAngle\n        ? param.startAngle\n        : idx * this.sliderArcAngle +\n            idx * this.sliderArcAngleStep -\n            this.sliderArcAngleAngleOffset\n    },\n\n    getEndAngle(param) {\n      return param.endAngle ? param.endAngle : `+${this.sliderArcAngle}`\n    },\n\n    updatePaperCircle() {\n      const { x, y } = getCenter(this.$refs.effectArea)\n      // const radius = this.$refs.effectArea.getBoundingClientRect().width / 2\n      this.paperCircle.set({ position: { x, y } })\n    },\n\n    handleParamChange(roundSliderEvt) {\n      // NOTE: this seems to be doing nothin'\n      const paramName = roundSliderEvt.id\n      const val = roundSliderEvt.value\n      this.params[paramName].handler(val)\n      this.updatePaperCircle()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.effect {\n  position: absolute;\n  width: 200px;\n  height: 200px;\n}\n\n.effect-area {\n  position: absolute;\n  width: 200px;\n  height: 200px;\n  border-radius: 100%;\n  background: radial-gradient(circle, var(--blue-light), rgba(0, 0, 0, 0.2));\n  pointer-events: none; // so that can move a sample behind\n}\n\n.effect-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  pointer-events: auto; // to override the none of the parent\n  &:hover {\n    border: 1px solid black;\n  }\n  z-index: 1000;\n}\n\n.sliders {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-100%, -100%);\n  width: 50px;\n  height: 50px;\n  pointer-events: auto !important; // to override the none of the parent\n}\n\n.rs-handle {\n  box-shadow: 0 0 2px 0 #000 !important;\n  transition: all 0.05s;\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer !important;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Effect.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Effect.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Effect.vue?vue&type=template&id=79166702\"\nimport script from \"./Effect.vue?vue&type=script&lang=js\"\nexport * from \"./Effect.vue?vue&type=script&lang=js\"\nimport style0 from \"./Effect.vue?vue&type=style&index=0&id=79166702&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <Effect\n    :params=\"params\"\n    :effect-node=\"delayNode\"\n    icon=\"icons/delay.svg\"\n    name=\"delay\"\n  ></Effect>\n</template>\n\n<script>\nimport * as Tone from \"tone\"\nimport Effect from \"@/components/Effect\"\nimport { mapExp, getCenter } from \"@/utils\"\n\nexport default {\n  components: {\n    Effect,\n  },\n\n  data() {\n    return {\n      delayNode: null,\n      params: {\n        delayTime: {\n          min: 0.01,\n          max: 2.5,\n          step: 0.01,\n          value: 0.5,\n          handler: (val) => {\n            const { min, max } = this.params.delayTime\n            const expVal = mapExp(val, min, max)\n            console.debug(\"delay time is now\", val, expVal)\n            // this.delayNode.delayTime.rampTo(expVal, 0.01)\n          },\n        },\n        feedback: {\n          min: 0,\n          max: 1,\n          step: 0.01,\n          value: 0.5,\n          handler: (val) => {\n            console.debug(\"feedback is now\", val)\n            this.delayNode.feedback.rampTo(val, 0.01)\n          },\n        },\n      },\n    }\n  },\n\n  mounted() {\n    this.delayNode = new Tone.FeedbackDelay(\n      this.params.delayTime.value,\n      this.params.feedback.value\n    ).toDestination()\n    console.debug(\"created delay node\")\n    if (!this.$root.effectNodes) this.$root.effectNodes = []\n    this.$root.effectNodes[\"delay\"] = this.delayNode\n  },\n\n  methods: {\n    getSaveData() {\n      return {\n        ...getCenter(this.$el),\n        name: this.name,\n        params: {\n          delayTime: {\n            value: this.params.delayTime.value,\n          },\n          feedback: {\n            value: this.params.feedback.value,\n          },\n          range: {\n            value: this.params.range.value,\n          },\n        },\n      }\n    },\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Delay.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Delay.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Delay.vue?vue&type=template&id=17e2540e\"\nimport script from \"./Delay.vue?vue&type=script&lang=js\"\nexport * from \"./Delay.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Effect',{attrs:{\"params\":_vm.params,\"effect-node\":_vm.reverbNode,\"icon\":\"icons/reverb.svg\",\"name\":\"reverb\"}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <Effect\n    :params=\"params\"\n    :effect-node=\"reverbNode\"\n    icon=\"icons/reverb.svg\"\n    name=\"reverb\"\n  ></Effect>\n</template>\n\n<script>\nimport * as Tone from \"tone\"\nimport Effect from \"@/components/Effect\"\nimport { getCenter } from \"@/utils\"\n\nexport default {\n  components: {\n    Effect,\n  },\n\n  data() {\n    return {\n      reverbNode: null,\n      params: {\n        // Freeverb doesn't have dampening\n        // dampening: {\n        //   min: 0.1,\n        //   max: 0.1,\n        //   step: 100,\n        //   value: 0.1,\n        //   handler: (val) => {\n        //     console.debug(\"dampening is now\", val)\n        //     // this.reverbNode.dampening.rampTo(val, 0.01)\n        //     this.reverbNode.dampening = val\n        //   },\n        //   startAngle: (idx) => {\n        //     return idx * 90\n        //   },\n        //   endAngle: (idx) => {\n        //     return idx * 90\n        //   },\n        // },\n        decay: {\n          min: 0.15,\n          max: 1.5,\n          step: 0.01,\n          value: 0.5,\n          handler: (val) => {\n            console.debug(\"decay/roomsize is now\", val)\n            // this.reverbNode.roomSize.rampTo(val, 0.01)\n            this.reverbNode.decay = val\n          },\n          // shorter version\n          // startAngle: 45,\n          // endAngle: \"+90\",\n          // longer version\n          startAngle: -15,\n          endAngle: 195,\n        },\n      },\n    }\n  },\n\n  mounted() {\n    // Freeverb\n    // Freeverb doesn't dampening breaking when changing freq in tone@15, so using simple Reverb instead\n    // this.reverbNode = new Tone.Freeverb(\n    //   this.params.decay.value,\n    //   this.params.dampening.value\n    // )\n\n    // force range to be at the bottom (despite idx being 2)\n    this.params.range.startAngle = 225\n    this.params.range.endAngle = \"+90\"\n\n    // Reverb (Simple)\n    this.reverbNode = new Tone.Reverb(this.params.decay.value)\n\n    // compressor node\n    const threshold = -30\n    const ratio = 3\n    this.compressorNode = new Tone.Compressor(threshold, ratio)\n\n    this.reverbNode.chain(this.compressorNode, this.$root.preMaster)\n    if (!this.$root.effectNodes) this.$root.effectNodes = []\n    this.$root.effectNodes[\"reverb\"] = this.reverbNode\n  },\n\n  methods: {\n    getSaveData() {\n      return {\n        ...getCenter(this.$el),\n        name: this.name,\n        params: {\n          dampening: {\n            value: this.params.dampening.value,\n          },\n          decay: {\n            value: this.params.decay.value,\n          },\n          range: {\n            value: this.params.range.value,\n          },\n        },\n      }\n    },\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Reverb.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Reverb.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Reverb.vue?vue&type=template&id=0f2e1988\"\nimport script from \"./Reverb.vue?vue&type=script&lang=js\"\nexport * from \"./Reverb.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\" class=\"no-select\" @dragover.prevent @drop.prevent=\"handleDrop\">\n    <canvas\n      id=\"paper-canvas\"\n      ref=\"paperCanvas\"\n      width=\"100%\"\n      height=\"100%\"\n      style=\"z-index: 0\"\n      :class=\"{ debug: $root.debug }\"\n    ></canvas>\n    <img\n      id=\"add-button\"\n      class=\"app-button scale-hover\"\n      src=\"icons/add.svg\"\n      style=\"right: 20px\"\n      @click=\"adding = !adding\"\n    />\n    <div v-show=\"adding\" style=\"position: absolute; bottom: 70px; right: 20px\">\n      <div\n        v-for=\"presetKey in Object.keys(presets)\"\n        :key=\"presetKey\"\n        class=\"add-sample-button scale-hover no-drag\"\n        @click=\"addPreset(presetKey)\"\n      >\n        {{ presetKey }}\n      </div>\n      <div class=\"add-sample-button scale-hover\" @click=\"addSample\">📁</div>\n    </div>\n    <img\n      id=\"add-button\"\n      class=\"app-button scale-hover\"\n      src=\"icons/trash.svg\"\n      style=\"right: 80px\"\n      @click=\"removeSample\"\n    />\n    <img\n      id=\"save-button\"\n      class=\"app-button\"\n      src=\"icons/save.svg\"\n      style=\"right: 140px\"\n      @click=\"saveSession\"\n    />\n    <img\n      id=\"record-button\"\n      class=\"app-button\"\n      src=\"icons/record.svg\"\n      style=\"right: 200px\"\n      :class=\"{ recording: recording }\"\n      @click=\"toggleSimpleRecord\"\n    />\n    <img\n      id=\"mic-button\"\n      class=\"app-button\"\n      src=\"icons/mic.svg\"\n      style=\"right: 260px\"\n      :class=\"{ recording: microphoning }\"\n      @click=\"toggleMicrophone\"\n    />\n    <Sample\n      v-for=\"sample in samples\"\n      ref=\"samples\"\n      :key=\"sample.idx\"\n      :name=\"sample.name\"\n      :audio=\"sample.audio\"\n      :position=\"sample.position\"\n      :idx=\"sample.idx\"\n      :audio-buffer=\"sample.buffer\"\n      @mouseover.native=\"$root.lastSampleInteractionIdx = sample.idx\"\n    />\n    <Reverb ref=\"reverb\" style=\"bottom: 50px; left: 30px\" />\n    <Delay ref=\"delay\" style=\"bottom: 50px; left: 280px\" />\n    <input\n      id=\"hiddenFileInput\"\n      ref=\"fileChooser\"\n      type=\"file\"\n      style=\"display: none\"\n      accept=\".mp3\"\n      @change=\"handleSampleFileUpload\"\n    />\n    <a href=\"https://github.com/Digitopia/DigiCanvas\" target=\"_blank\">\n      <img\n        id=\"info-button\"\n        class=\"app-button scale-hover\"\n        src=\"icons/info.svg\"\n        @click=\"showInfo = true\"\n      />\n    </a>\n  </div>\n</template>\n\n<script>\nimport Toastify from \"toastify-js\"\nimport \"toastify-js/src/toastify.css\"\nimport Delay from \"@/components/Delay\"\nimport Reverb from \"@/components/Reverb\"\nimport Sample from \"@/components/Sample\"\n\nimport { audioBufferToWav } from \"@/utils\"\n\nimport * as lamejs from \"@breezystack/lamejs\"\nimport {\n  BlobReader,\n  BlobWriter,\n  TextReader,\n  TextWriter,\n  ZipReader,\n  ZipWriter,\n} from \"@zip.js/zip.js\"\nimport { MediaRecorder } from \"extendable-media-recorder\"\nimport paper from \"paper\"\nimport * as Tone from \"tone\"\n\nconst presets = {\n  // 0: {\n  //   audio: \"presets/guit_plus_background.mp3\",\n  //   name: \"guit + bg\",\n  // },\n  1: {\n    audio: \"presets/birds1_mono.mp3\",\n    name: \"birds\",\n  },\n  2: {\n    audio: \"presets/chains1_mono.mp3\",\n    name: \"chains\",\n  },\n  3: {\n    audio: \"presets/flute1_mono.mp3\",\n    name: \"flute\",\n  },\n  4: {\n    audio: \"presets/horse1_mono.mp3\",\n    name: \"horse\",\n  },\n  5: {\n    audio: \"presets/marimba_roll_and_clarinet1_mono.mp3\",\n    name: \"marimba\",\n  },\n  6: {\n    audio: \"presets/metalHit1_mono.mp3\",\n    name: \"metal 1\",\n  },\n  7: {\n    audio: \"presets/metalHit2_mono.mp3\",\n    name: \"metal 2\",\n  },\n  8: {\n    audio: \"presets/sailing1_mono.mp3\",\n    name: \"sailing\",\n  },\n  9: {\n    audio: \"presets/snoring1_mono.mp3\",\n    name: \"snoring\",\n  },\n}\n\nconst SAMPLES_MAX = 6\n\nexport default {\n  name: \"App\",\n\n  components: {\n    Sample,\n    Reverb,\n    Delay,\n  },\n\n  data() {\n    return {\n      samples: [],\n      presets,\n      recording: false,\n      microphoning: false,\n      adding: false,\n    }\n  },\n\n  created() {\n    // effect nodes will connect here from other places\n    this.$root.preMaster = new Tone.Compressor(-30, 3).connect(Tone.Master)\n\n    this.initMicrophone()\n    this.initRecord()\n\n    const urlParams = new URLSearchParams(window.location.search)\n    this.$root.debug = urlParams.get(\"debug\") === \"1\"\n    if (this.$root.debug) {\n      console.debug(\"DEBUG mode on\")\n      window.samples = this.samples\n    }\n  },\n\n  mounted() {\n    // start with a sample already loaded\n    this.samples.push({\n      ...this.presets[1],\n      idx: 0,\n    })\n    this.$root.lastSampleInteractionIdx = 0\n\n    setTimeout(() => {\n      window.sample = this.$refs.samples[0]\n    }, 1000)\n\n    // quick entry of presets with keyboard\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key >= \"0\" && event.key <= \"9\") {\n        this.addPreset(Number(event.key))\n      }\n    })\n\n    this.setupPaper()\n    this.resizeCanvas()\n    window.addEventListener(\"resize\", this.resizeCanvas)\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.resizeCanvas)\n  },\n\n  methods: {\n    addSample() {\n      this.$refs.fileChooser.click()\n    },\n\n    addPreset(presetKey) {\n      this.adding = false\n      if (this.samples.length >= SAMPLES_MAX) {\n        Toastify({\n          text: \"Maximum number of samples in canvas reached\",\n          duration: 3000,\n          // newWindow: false,\n          gravity: \"top\",\n          position: \"center\",\n          stopOnFocus: true, // Prevents dismissing of toast on hover\n          style: {\n            background: \"linear-gradient(to right, #00b09b, #96c93d)\",\n          },\n        }).showToast()\n        return\n      }\n      this.samples.push({\n        ...this.presets[presetKey],\n        idx: this.samples.length,\n      })\n    },\n\n    handleSampleFileUpload(event) {\n      const file = event.target.files[0]\n      console.debug(\"Selected file:\", file)\n      this.initSample(file)\n    },\n\n    removeSample() {\n      if (this.samples.length == 0) return\n\n      const refSample = this.$refs.samples.find(\n        (sample) => sample.idx == this.$root.lastSampleInteractionIdx\n      )\n      refSample.$destroy()\n\n      this.samples = this.samples.filter(\n        (sample) => sample.idx != this.$root.lastSampleInteractionIdx\n      )\n\n      // after deleting, consider last interacted sample to be the first one\n      this.$root.lastSampleInteractionIdx =\n        this.samples.length > 0 ? this.samples[0].idx : null\n    },\n\n    toggleSimpleRecord() {\n      if (this.microphoning) return\n      if (!this.recording) {\n        this.startSimpleRecord()\n        this.recording = true\n      } else {\n        this.stopSimpleRecord()\n        this.recording = false\n      }\n    },\n\n    startSimpleRecord() {\n      this.simpleRecorder = new Tone.Recorder()\n      this.$root.preMaster.connect(this.simpleRecorder)\n      // start recording\n      this.simpleRecorder.start()\n    },\n\n    async stopSimpleRecord() {\n      const recording = await this.simpleRecorder.stop()\n      const url = URL.createObjectURL(recording)\n      const anchor = document.createElement(\"a\")\n      anchor.download = \"recording.webm\"\n      anchor.href = url\n      anchor.click()\n    },\n\n    async initRecord() {\n      console.debug(\"recording...\")\n\n      this.mediaRecorder = null\n      this.audioBlobs = []\n      this.capturedStream = null\n\n      // Register the extendable-media-recorder-wav-encoder\n      // await register(await connect())\n    },\n\n    async record() {\n      if (!this.recording) {\n        console.debug(\"recording...\")\n        this.startRecording()\n        this.recording = true\n      } else {\n        console.debug(\"finished recording\")\n        const audioBlob = await this.stopRecording()\n        if (audioBlob) {\n          const audio = new Audio()\n          audio.src = URL.createObjectURL(audioBlob)\n          audio.play()\n        }\n        this.recording = false\n      }\n    },\n\n    // Starts recording audio\n    startRecording() {\n      return navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            echoCancellation: true,\n          },\n        })\n        .then((stream) => {\n          this.audioBlobs = []\n          this.capturedStream = stream\n\n          // Use the extended MediaRecorder library\n          this.mediaRecorder = new MediaRecorder(stream, {\n            mimeType: \"audio/ogg\",\n          })\n\n          // Add audio blobs while recording\n          this.mediaRecorder.addEventListener(\"dataavailable\", (event) => {\n            this.audioBlobs.push(event.data)\n          })\n\n          this.mediaRecorder.start()\n        })\n        .catch((e) => {\n          console.error(e)\n        })\n    },\n\n    stopRecording() {\n      return new Promise((resolve) => {\n        if (!this.mediaRecorder) {\n          resolve(null)\n          return\n        }\n\n        this.mediaRecorder.addEventListener(\"stop\", () => {\n          console.debug(\"stopped\")\n          const mimeType = this.mediaRecorder.mimeType\n          const audioBlob = new Blob(this.audioBlobs, { type: mimeType })\n\n          if (this.capturedStream) {\n            this.capturedStream.getTracks().forEach((track) => track.stop())\n          }\n\n          resolve(audioBlob)\n        })\n\n        this.mediaRecorder.stop()\n      })\n    },\n\n    convertWavToMp3(wavBlob) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n\n        reader.onload = function () {\n          const arrayBuffer = this.result\n\n          // Create a WAV decoder\n          const wavDecoder = lamejs.WavHeader.readHeader(\n            new DataView(arrayBuffer)\n          )\n\n          // Get the WAV audio data as an array of samples\n          // const wavSamples = new Int16Array(arrayBuffer, wavDecoder.dataOffset, wavDecoder.dataLen / 2);\n          const wavSamples = new Int16Array(\n            arrayBuffer,\n            wavDecoder.dataOffset,\n            wavDecoder.dataLen / 2\n          )\n\n          // Create an MP3 encoder\n          const mp3Encoder = new lamejs.Mp3Encoder(\n            wavDecoder.channels,\n            wavDecoder.sampleRate,\n            128\n          )\n\n          // Encode the WAV samples to MP3\n          const mp3Buffer = mp3Encoder.encodeBuffer(wavSamples)\n\n          // Finalize the MP3 encoding\n          const mp3Data = mp3Encoder.flush()\n\n          // Combine the MP3 header and data into a new ArrayBuffer\n          const mp3BufferWithHeader = new Uint8Array(\n            mp3Buffer.length + mp3Data.length\n          )\n          mp3BufferWithHeader.set(mp3Buffer, 0)\n          mp3BufferWithHeader.set(mp3Data, mp3Buffer.length)\n\n          // Create a Blob from the ArrayBuffer\n          const mp3Blob = new Blob([mp3BufferWithHeader], { type: \"audio/mp3\" })\n\n          resolve(mp3Blob)\n        }\n\n        reader.onerror = function (error) {\n          reject(error)\n        }\n\n        // Read the input blob as an ArrayBuffer\n        reader.readAsArrayBuffer(wavBlob)\n      })\n    },\n\n    downloadFile(blob, filename) {\n      const a = document.createElement(\"a\")\n      const url = URL.createObjectURL(blob)\n      a.href = url\n      a.download = filename\n      document.body.appendChild(a)\n      a.click()\n      setTimeout(function () {\n        document.body.removeChild(a)\n        window.URL.revokeObjectURL(url)\n      }, 0)\n    },\n\n    async loadSession(zipFileBlob) {\n      this.samples = []\n\n      const zipFileReader = new BlobReader(zipFileBlob)\n      const configWriter = new TextWriter()\n      const zipReader = new ZipReader(zipFileReader)\n\n      const entries = await zipReader.getEntries()\n\n      // first read config\n      const configEntry = entries.find(\n        (entry) => entry.filename === \"config.json\"\n      )\n      const configJson = await configEntry.getData(configWriter)\n      const config = JSON.parse(configJson)\n\n      // TODO: load effects settings\n      // const d1 = this.$refs.delay.$data\n      // const d2 = config.effects.delay\n      // const merged = merge(this.$refs.delay.$data, config.effects.delay)\n      // this.$refs.delay.$data.params.range = 350\n\n      // load samples\n      const sampleEntries = entries.filter((entry) => entry != configEntry)\n      sampleEntries.forEach(async (entry) => {\n        console.debug(\"entry\", entry)\n        const sampleName = entry.filename.split(\".mp3\")[0]\n        const sampleConfig = config.samples.find(\n          (sample) => sample.name === sampleName\n        )\n        const blobWriter = new BlobWriter()\n        const blobMp3 = await entry.getData(blobWriter)\n        const blobUrl = URL.createObjectURL(blobMp3)\n        this.samples.push({\n          audio: blobUrl,\n          name: sampleName,\n          position: {\n            x: sampleConfig.x,\n            y: sampleConfig.y,\n          },\n        })\n        console.debug(blobMp3)\n      })\n      await zipReader.close()\n    },\n\n    async saveSession() {\n      if (this.microphoning || this.recording) return\n      const saveFilename = prompt(\"name to save?\")\n      if (!saveFilename) return\n      const zipFileWriter = new BlobWriter()\n      const zipWriter = new ZipWriter(zipFileWriter)\n\n      // save session state\n      const configData = this.getSaveData()\n      const configJson = JSON.stringify(configData, null, 4)\n      const configBlob = new Blob([configJson], { type: \"application/json\" })\n      const configReader = new TextReader(configBlob)\n      await zipWriter.add(\"config.json\", configReader)\n\n      // save audio samples\n      for (let idx = 0; idx < this.$refs.samples.length; idx++) {\n        const sample = this.$refs.samples[idx]\n        const buffer = sample.audioNode.buffer\n        var wav = audioBufferToWav(buffer)\n        const blobWav = new Blob([wav], { type: \"audio/mpeg\" })\n        const blobMp3 = await this.convertWavToMp3(blobWav)\n        const blobReader = new BlobReader(blobMp3)\n        await zipWriter.add(`${sample.name}.mp3`, blobReader)\n      }\n\n      await zipWriter.close()\n\n      // zip the thing and download it\n      const zipFileBlob = await zipFileWriter.getData()\n      this.downloadFile(zipFileBlob, `${saveFilename}.digicanvas`)\n    },\n\n    getSaveData() {\n      return {\n        samples: this.$refs.samples.map((sample) => sample.getSaveData()),\n        effects: {\n          reverb: this.$refs.reverb.getSaveData(),\n          delay: this.$refs.delay.getSaveData(),\n        },\n      }\n    },\n\n    initMicrophone() {\n      this.microphone = new Tone.UserMedia()\n      this.recorder = new Tone.Recorder()\n      this.microphone.connect(this.recorder)\n      this.microphone.open()\n    },\n\n    async toggleMicrophone() {\n      // Tone.context.resume()\n      if (this.recording) return\n      if (!this.microphoning) {\n        console.debug(\"microphoning...\")\n        this.microphoning = true\n        this.recorder.start()\n      } else {\n        console.debug(\"finished microphoning\")\n        this.microphoning = false\n        const data = await this.recorder.stop()\n        const blobUrl = URL.createObjectURL(data)\n        console.log(\"blobURL\", blobUrl)\n        // const player = new Tone.Player(blobUrl, () => {}).toDestination()\n        this.samples.push({\n          audio: blobUrl,\n          name: \"my recording\",\n          idx: this.samples.length,\n        })\n      }\n    },\n\n    handleDrop(event) {\n      console.debug(\"handling drop\")\n      const file = event.dataTransfer.files[0]\n      console.debug(file)\n      if (file && file.type.startsWith(\"audio/\")) {\n        this.initSample(file)\n      } else if (file.name.endsWith(\".digicanvas\")) {\n        console.debug(\"should load this one\")\n        if (\n          confirm(\n            \"Loading this configuration file will loose all current state session. Are you sure you want to proceed?\"\n          )\n        )\n          this.loadSession(file)\n      } else {\n        alert(\"Please drop a valid audio file.\")\n      }\n    },\n\n    initSample(file) {\n      // Load the dropped audio file\n      const reader = new FileReader()\n      reader.onload = (evt) => {\n        // option blob\n        const blob = new Blob([reader.result], { type: file.type })\n        console.debug(\"BLOB\", blob)\n        const blobUrl = URL.createObjectURL(blob)\n\n        // check audio duration (by creating an Audio element and getting its metadata)\n        const audio = new Audio()\n        audio.src = blobUrl\n        audio.addEventListener(\"loadedmetadata\", () => {\n          console.debug(\"Audio duration:\", audio.duration)\n          if (audio.duration > 5) {\n            console.debug(blobUrl)\n            this.samples.push({\n              audio: blobUrl,\n              name: file.name.replace(/\\.[^/.]+$/, \"\"),\n            })\n          } else {\n            alert(\"Samples need to be between 5 and 15 seconds.\")\n            return\n            // TODO: add some silence or crop\n            // eslint-disable-next-line no-unreachable\n            console.debug(\"going to add some silence\")\n            const data = evt.target.result\n            Tone.context.decodeAudioData(data, (buffer) => {\n              const modifiedBuffer = this.addSilenceToEnd(buffer, 10)\n              console.debug(\n                \"Modified audio buffer:\",\n                modifiedBuffer,\n                modifiedBuffer.duration\n              )\n              // create a new blob with the silence\n              const blobSilence = new Blob([modifiedBuffer], {\n                type: file.type,\n              })\n              window.modifiedBuffer = modifiedBuffer\n              const blobSilenceUrl = URL.createObjectURL(blobSilence)\n              console.debug(\"BLOB\", blobSilence)\n              console.debug(blobSilenceUrl)\n              this.samples.push({\n                audio: blobSilenceUrl,\n                name: file.name.replace(/\\.[^/.]+$/, \"\"),\n                buffer: modifiedBuffer,\n              })\n            })\n          }\n        })\n        audio.load()\n      }\n      reader.readAsArrayBuffer(file)\n    },\n\n    addSilenceToEnd(audioBuffer, targetDuration) {\n      const currentDuration = audioBuffer.duration\n      if (currentDuration >= targetDuration) {\n        console.debug(\n          \"Audio is already equal to or longer than the target duration.\"\n        )\n        return audioBuffer\n      }\n      const channels = audioBuffer.numberOfChannels\n      const sampleRate = audioBuffer.sampleRate\n      const targetLength = Math.floor(targetDuration * sampleRate)\n      // Create a new AudioBuffer with the target duration\n      const newBuffer = Tone.context.createBuffer(\n        channels,\n        targetLength,\n        sampleRate\n      )\n      // Copy the original audio data to the new buffer\n      for (let channel = 0; channel < channels; channel++) {\n        const channelData = audioBuffer.getChannelData(channel)\n        newBuffer.getChannelData(channel).set(channelData)\n      }\n      return newBuffer\n    },\n\n    setupPaper() {\n      const canvas = this.$refs.paperCanvas\n      window.onload = () => {\n        paper.setup(canvas)\n        paper.install(canvas)\n        this.$root.paper = canvas.paper // save paperScope to be used other places\n      }\n    },\n\n    resizeCanvas() {\n      const app = this.$el\n      const canvas = this.$refs.paperCanvas\n      canvas.width = app.clientWidth\n      canvas.height = app.clientHeight\n      if (paper.view) {\n        paper.view.viewSize = new paper.Size(canvas.width, canvas.height)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n:root {\n  --blue: rgb(86, 143, 179);\n  --blue-light: rgb(170, 197, 216);\n  --yellow: rgb(255, 220, 96);\n  --border-radius: 10px;\n}\n\nhtml,\nbody {\n  background: var(--yellow);\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  margin: 0;\n}\n\n.scale-hover {\n  transition: all 0.05s;\n  &:hover {\n    transform: scale(1.05);\n    cursor: pointer !important;\n  }\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  width: 100%;\n  height: 100dvh;\n  position: relative;\n  overflow: hidden;\n}\n\n#paper-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: none;\n  &.debug {\n    display: block;\n    z-index: 1;\n  }\n}\n\n.app-button {\n  bottom: 20px;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  z-index: 2;\n  &:hover {\n    cursor: pointer;\n  }\n  &.disabled {\n    opacity: 0.2;\n    &:hover {\n      cursor: not-allowed !important;\n    }\n  }\n}\n\n.add-sample-button {\n  width: 45px;\n  height: 45px;\n  border: 3px solid black;\n  border-radius: 50%;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: center;\n  font-weight: bold;\n  &:hover {\n    cursor: pointer;\n  }\n}\n\n*,\n.no-drag {\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -o-user-select: none;\n  user-select: none;\n}\n\n#info-button {\n  top: 10px;\n  right: 10px;\n  width: 15px;\n  height: 15px;\n}\n\n.recording {\n  background: red;\n}\n\n// * {\n//   touch-action: manipulation;\n// }\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=19e31a00\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=19e31a00&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\"\nimport App from \"./App.vue\"\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount(\"#app\")\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdigicanvas\"] = self[\"webpackChunkdigicanvas\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(7468); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","$event","preventDefault","handleDrop","apply","arguments","ref","class","debug","$root","staticStyle","adding","directives","name","rawName","value","expression","_l","Object","keys","presets","presetKey","key","addPreset","_v","_s","addSample","removeSample","saveSession","recording","toggleSimpleRecord","microphoning","toggleMicrophone","samples","sample","idx","refInFor","audio","position","buffer","nativeOn","lastSampleInteractionIdx","handleSampleFileUpload","showInfo","staticRenderFns","params","delayNode","style","backgroundImage","icon","stopPropagation","showSliders","touchStart","param","paramName","getStartAngle","getEndAngle","min","max","step","handleParamChange","model","callback","$$v","$set","mapNumber","number","inMin","inMax","outMin","outMax","clamp","Math","randomFloat","random","randomInt","round","randomGaussian","mean","stdev","u","v","z","sqrt","log","cos","PI","lerpColor","c1","c2","amt","r1","g1","b1","a1","r2","g2","b2","a2","r3","g3","b3","a3","mapExp","val","norm","exp","ret","toFixed","mapLog","log10","audioBufferToWav","opt","result","numChannels","numberOfChannels","sampleRate","format","float32","bitDepth","interleave","getChannelData","encodeWAV","bytesPerSample","blockAlign","ArrayBuffer","length","view","DataView","writeString","setUint32","setUint16","floatTo16BitPCM","writeFloat32","inputL","inputR","Float32Array","index","inputIndex","output","offset","input","i","setFloat32","s","setInt16","string","setUint8","charCodeAt","getCenter","div","rect","getBoundingClientRect","x","left","width","y","top","height","num","decimals","playing","isPlaying","controls","toggleControls","mode","settings","modes","m","active","disabled","toggleEditName","isEditingName","editName","domProps","type","indexOf","_k","keyCode","target","composing","toggleMode","resetTimestretch","SAMPLE_PIXELS_PER_SECOND","SAMPLE_MAX_WIDTH","SAMPLE_MIN_WIDTH","SAMPLE_HEIGHT","props","String","required","audioBuffer","AudioBuffer","Number","data","audioNode","audioGainNode","effectSends","reverb","delay","audioElementSource","wavesurfer","granular","origin","grainSize","rate","sliders","grains","envelope","attack","release","scale","amplitude","timestretch","filtering","slider","highpass","lowpass","region","canvas","canvasCtx","pixelsPerSecond","maxWidth","minWidth","originalDuration","originalWidth","paperRect","computed","maxDuration","isLooping","bufferDuration","duration","NaN","watch","console","bool","setOptions","resize","drag","created","window","mounted","initWaveform","initAudio","initGranularSliders","initCanvas","$refs","$on","effectDragUseArea","document","addEventListener","event","$destroy","beforeDestroy","info","resizeObserver","unobserve","$off","$el","parentNode","removeChild","nodes","forEach","node","dispose","methods","getInvertedRate","draggable","disable","enable","timestamp2Progress","timestamp","WaveSurfer","create","container","waveform","backgroundColor","waveColor","progressColor","cursorColor","cursorWidth","barWidth","barHeight","barGap","normalize","interact","hideScrollbar","plugins","RegionsPlugin","regionsPlugin","registerPlugin","Tone","createMediaElementSource","media","initDraggable","initPosition","play","onClick","p","loadBlob","load","innerWidth","innerHeight","gsap","to","ease","opacity","onComplete","paper","Path","Rectangle","size","fillColor","strokeColor","Draggable","trigger","header","bounds","zIndexBoost","onDrag","$emit","$parent","$children","set","parseInt","initResizeObserver","initScaleDraggable","setTimeout","initRegion","stop","onerror","err","error","volume","effects","effect","connect","effectNodes","filterTypes","filterType","filterSettings","filterNode","preMaster","opts","grainSizeSlider","Nexus","that","expGrainSize","toString","padStart","rateSlider","logRate","randomSlider","filteringSlider","filterFrequency","frequency","rampTo","disconnect","colorize","updateAmplitude","gain","exponentialRampToValueAtTime","updateTimestretch","playbackRate","startColor","stopColor","color","setPlaybackRate","getContext","scaleImage","lockAxis","minY","maxY","onDragEnd","onDragStart","cursor","endX","endY","lockedAxis","mappedAmplitude","ResizeObserver","entries","entry","newWidth","contentRect","observe","start","end","addRegion","content","loop","updateGranularOrigin","mx","Promise","resolve","waveformWrapper","clientWidth","clientHeight","setAttribute","addGrain","updateRateInterval","seekTo","clearGranularInterval","clearCanvas","wasPlaying","clearGrains","interval","clearInterval","setInterval","currentDelay","baseOffset","space","mappedStdDev","randOffset","grainOffset","grain","fadeIn","fadeOut","shift","drawGrains","push","clearRect","fillStyle","beginPath","r","arc","fill","closePath","resume","effectDragUseDistance","evt","effectName","effectAreaEl","querySelector","x1","y1","x2","y2","dx","dy","distance","effectAreaRect","effectRadius","effectSendVal","sampleRect","effectCricle","$data","paperCircle","effectCirclePath","toPath","intersection","intersect","remove","intersectionRate","area","setEffectSend","getSaveData","component","components","RoundSlider","effectNode","sliderArcAngle","rangeRadius","touched","sliderArcAngleStep","n","remaining","sliderArcAngleAngleOffset","maxRangeWith","range","handler","effectArea","transform","newRadius","radius","updatePaperCircle","Shape","Circle","center","strokeWidth","effectCenter","areas","querySelectorAll","highest","Array","from","map","zIndex","startAngle","endAngle","roundSliderEvt","id","Effect","delayTime","expVal","feedback","toDestination","reverbNode","decay","threshold","ratio","compressorNode","chain","dampening","SAMPLES_MAX","Sample","Reverb","Delay","initMicrophone","initRecord","urlParams","URLSearchParams","location","search","get","setupPaper","resizeCanvas","removeEventListener","fileChooser","click","Toastify","text","gravity","stopOnFocus","background","showToast","file","files","initSample","refSample","find","filter","stopSimpleRecord","startSimpleRecord","simpleRecorder","url","URL","createObjectURL","anchor","createElement","download","href","mediaRecorder","audioBlobs","capturedStream","record","audioBlob","stopRecording","Audio","src","startRecording","navigator","mediaDevices","getUserMedia","echoCancellation","then","stream","MediaRecorder","mimeType","catch","e","Blob","getTracks","track","convertWavToMp3","wavBlob","reject","reader","FileReader","onload","arrayBuffer","wavDecoder","lamejs","readHeader","wavSamples","Int16Array","dataOffset","dataLen","mp3Encoder","channels","mp3Buffer","encodeBuffer","mp3Data","flush","mp3BufferWithHeader","Uint8Array","mp3Blob","readAsArrayBuffer","downloadFile","blob","filename","a","body","appendChild","revokeObjectURL","loadSession","zipFileBlob","zipFileReader","BlobReader","configWriter","TextWriter","zipReader","ZipReader","getEntries","configEntry","configJson","getData","config","JSON","parse","sampleEntries","sampleName","split","sampleConfig","blobWriter","BlobWriter","blobMp3","blobUrl","close","saveFilename","prompt","zipFileWriter","zipWriter","ZipWriter","configData","stringify","configBlob","configReader","TextReader","add","wav","blobWav","blobReader","microphone","recorder","open","dataTransfer","startsWith","endsWith","confirm","alert","replace","addSilenceToEnd","targetDuration","currentDuration","targetLength","floor","newBuffer","createBuffer","channel","channelData","paperCanvas","app","viewSize","Vue","productionTip","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}